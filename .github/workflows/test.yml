name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  cancel-redundant:
    name: Cancel Redundant Workflows
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Cancel redundant workflow runs
        uses: ./.github/actions/cancel-redundant-workflows
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Test Suite
    runs-on: macos-latest
    needs: cancel-redundant
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for SonarCloud blame data
      
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: "5.9"
    
    # Cache Swift Package Manager dependencies
    - name: Cache SPM dependencies
      uses: actions/cache@v4
      with:
        path: |
          .build
          ~/.swiftpm
        key: ${{ runner.os }}-spm-${{ hashFiles('Package.swift', '**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
      
    - name: Run tests with coverage
      env:
        CI: true
      run: swift test --enable-code-coverage
        
    # Convert Swift coverage to lcov format for Codecov
    - name: Generate coverage report
      run: |
        # Find the coverage data - check multiple possible locations
        PROF_DATA=$(find .build -name 'default.profdata' -type f | head -1)
        EXECUTABLE=$(find .build -name 'MagSafeGuardPackageTests.xctest' -type d | head -1)/Contents/MacOS/MagSafeGuardPackageTests
        
        echo "Found profdata: $PROF_DATA"
        echo "Found executable: $EXECUTABLE"
        
        # Generate lcov format
        if [[ -f "$PROF_DATA" && -f "$EXECUTABLE" ]]; then
          echo "Generating coverage report..."
          xcrun llvm-cov export \
            "$EXECUTABLE" \
            -instr-profile="$PROF_DATA" \
            -format="lcov" \
            -ignore-filename-regex=".*Tests\.swift|.*Mocks?\.swift|.*/MagSafeGuardApp\.swift|.*/PowerMonitorService\.swift|.*/PowerMonitorCore\.swift" > coverage.lcov
          
          echo "Coverage report size: $(wc -l < coverage.lcov) lines"
          echo "First 20 lines of coverage report:"
          head -20 coverage.lcov || echo "Failed to read coverage report"
        else
          echo "Coverage data not found"
          echo "PROF_DATA: $PROF_DATA"
          echo "EXECUTABLE: $EXECUTABLE"
          echo "Build directory contents:"
          find .build -type f -name "*.profdata" -o -name "*.xctest" | head -20
          exit 1
        fi
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.lcov
        flags: unittests
        name: codecov-swift
        fail_ci_if_error: false # Don't fail if upload fails
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    
    # SonarCloud Analysis
    - name: Install and run SonarCloud Scan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        # Install sonar-scanner using homebrew (available on macOS runners)
        brew install sonar-scanner
        
        # Run sonar-scanner directly to avoid deprecated action issues
        # The sonar-project.properties file contains all necessary configuration
        if [ -f "coverage.lcov" ]; then
          echo "Coverage file found: $(wc -l < coverage.lcov) lines"
          echo "Running SonarCloud analysis with coverage..."
          echo "Current directory: $(pwd)"
          echo "Coverage file path: $(realpath coverage.lcov)"
          echo "Checking file paths in coverage report:"
          grep -m 5 "^SF:" coverage.lcov || echo "No source files found in coverage"
        else
          echo "WARNING: No coverage.lcov file found"
          echo "Running SonarCloud analysis without coverage..."
        fi
        
        # Run the scanner
        sonar-scanner