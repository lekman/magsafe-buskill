name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Check if this is a release-please branch
  check-skip:
    name: Check Skip Conditions
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      should-skip: ${{ steps.check.outputs.should-skip }}
    steps:
      - name: Check if release-please branch
        id: check
        env:
          EVENT_NAME: ${{ github.event_name }}
          REF: ${{ github.ref }}
          HEAD_REF: ${{ github.head_ref }}
          BASE_REF: ${{ github.base_ref }}
          REF_NAME: ${{ github.ref_name }}
        run: |
          echo "Event: $EVENT_NAME"
          echo "Ref: $REF"
          echo "Head ref: $HEAD_REF"
          echo "Base ref: $BASE_REF"

          # For pull requests, check the head branch name
          if [[ "$EVENT_NAME" == "pull_request" ]]; then
            if [[ "$HEAD_REF" == release-please--* ]]; then
              echo "should-skip=true" >> $GITHUB_OUTPUT
              echo "Skipping tests for release-please PR from branch: $HEAD_REF"
            else
              echo "should-skip=false" >> $GITHUB_OUTPUT
            fi
          # For pushes, check the ref name
          elif [[ "$REF_NAME" == release-please--* ]]; then
            echo "should-skip=true" >> $GITHUB_OUTPUT
            echo "Skipping tests for release-please branch: $REF_NAME"
          else
            echo "should-skip=false" >> $GITHUB_OUTPUT
          fi

  test:
    name: Test Suite
    runs-on: macos-latest
    needs: check-skip
    if: needs.check-skip.outputs.should-skip != 'true'
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0 # Full history for SonarCloud blame data

      - name: Setup Swift Build Environment
        uses: ./.github/actions/swift
        with:
          swift-version: "5.9"

      - name: Clean build artifacts
        run: |
          echo "Cleaning build artifacts..."
          task clean

      - name: Run tests with coverage
        env:
          CI: true
          MAGSAFE_GUARD_TEST_MODE: 1
        run: |
          echo "Running CI-specific test configuration..."
          echo "This prevents app launch and permission dialogs"
          echo "NOTE: Currently running limited test subset - see TEST_REFACTORING_PLAN.md"
          task test-ci:coverage

      # Note: Coverage reporting is temporarily disabled due to limited test subset
      # See TEST_REFACTORING_PLAN.md for details
      
      - name: Test Summary
        if: always()
        run: |
          echo "## ðŸ“Š Test Results"
          echo ""
          echo "**Status**: Tests completed with limited subset"
          echo ""
          echo "### Currently Running Tests:"
          echo "- FeatureFlagsTests"
          echo "- SettingsModelTests"
          echo "- UserDefaultsManagerTests"
          echo "- PowerMonitorCoreTests"
          echo "- AuthenticationServiceMockTests"
          echo ""
          echo "### Temporarily Excluded Tests:"
          echo "See TEST_REFACTORING_PLAN.md for full list and remediation plan"
          echo ""
          echo "**Note**: Full test coverage will be restored after refactoring is complete"
