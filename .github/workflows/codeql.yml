name: "CodeQL Analysis"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "30 1 * * 1" # Run weekly on Mondays at 1:30 AM UTC

permissions:
  contents: read

# Ensure that we cancel older instances of running workflows for the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 20) || 360 }}

    permissions:
      security-events: write # Required for all workflows
      packages: read # Required to fetch internal or private CodeQL packs
      actions: read # Required to upload the results to code-scanning dashboard
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: swift
            build-mode: manual

    steps:
      - name: Checkout repository
        uses: actions/checkout@8edcb1bdb4e267140fa742c62e395cd74f332709 # 11bd71901bbe5b1630ceea73d27597364c9af683

      # Cache CodeQL database to speed up subsequent runs
      - name: Cache CodeQL database
        id: cache-codeql
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: |
            .codeql
            ~/codeql-home/codeql-dbs
            DerivedData/Build/Intermediates.noindex/CodeQL
          key: ${{ runner.os }}-codeql-db-${{ hashFiles('**/*.swift', 'MagSafeGuard.xcodeproj/project.pbxproj') }}
          restore-keys: |
            ${{ runner.os }}-codeql-db-

      - name: Initialize CodeQL
        uses: github/codeql-action/init@4dd16135b69a43b6c8efb853346f8437d92d3c93 # v3.26.6
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
          queries: security-extended,security-and-quality

      - name: Setup Swift Build Environment
        id: setup-swift
        if: matrix.language == 'swift'
        uses: ./.github/actions/swift
        with:
          cache-key-suffix: codeql

      - name: Build Swift Project for CodeQL
        timeout-minutes: 10
        run: |
          echo "🔨 Building project for CodeQL analysis..."
          # Use direct xcodebuild for CodeQL to avoid task overhead
          xcodebuild build \
            -project MagSafeGuard.xcodeproj \
            -scheme MagSafeGuard \
            -configuration Debug \
            -destination 'platform=macOS' \
            -derivedDataPath DerivedData \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGN_IDENTITY= \
            CODE_SIGNING_REQUIRED=NO \
            COMPILER_INDEX_STORE_ENABLE=NO \
            -quiet || true
          echo "✅ Build completed for CodeQL"

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@4dd16135b69a43b6c8efb853346f8437d92d3c93 # v3.26.6
        with:
          category: "/language:${{matrix.language}}"
          upload: true
          upload-database: true

      # Save CodeQL database location for debugging
      - name: Save CodeQL database info
        if: always()
        run: |
          echo "CodeQL database locations:"
          find . -name "*.sarif" -type f 2>/dev/null | head -10 || echo "No SARIF files found"
          find . -name "codeql-database.yml" -type f 2>/dev/null | head -10 || echo "No database config found"
          find ~/codeql-home -name "*.trap" -type f 2>/dev/null | wc -l || echo "0"
          echo "CodeQL trap files in home"

      # Generate workflow summary
      - name: Generate CodeQL Summary
        if: always()
        run: |
          cat >> $GITHUB_STEP_SUMMARY << EOF
          ## 🔍 CodeQL Analysis Summary

          | Property | Value |
          |----------|-------|
          | **Language** | ${{ matrix.language }} |
          | **Build Mode** | ${{ matrix.build-mode }} |
          | **Build Executed** | Always (required for CodeQL) |
          | **Analysis Time** | ~$(( $(date +%s) - ${{ steps.checkout.outputs.timestamp || '0' }} ))s |

          ### 📊 Cache Performance

          | Cache Type | Status |
          |------------|--------|
          | **Xcode Build Cache** | \${{ steps.setup-swift.outputs.cache-hit || 'miss' }} |
          | **CodeQL Database** | \${{ steps.cache-codeql.outputs.cache-hit || 'miss' }} |

          ### 📁 Build Artifacts

          \`\`\`
          $(du -sh DerivedData/Build/Products/Debug/ 2>/dev/null || echo "No build products")
          $(du -sh DerivedData/ 2>/dev/null || echo "No DerivedData")
          $(du -sh .codeql/ 2>/dev/null || echo "No CodeQL database")
          \`\`\`

          EOF
