name: Basic Security Scanning

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  # Basic security checks without external services
  security-checks:
    name: Security Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Check for secrets in code
      run: |
        echo "🔍 Checking for potential secrets in source code..."
        
        # Check only source code files, not GitHub workflows
        found_secrets=0
        
        # Check Swift files for hardcoded secrets
        echo "Checking Swift files..."
        swift_patterns=(
          "password.*=.*\".*\""
          "apiKey.*=.*\".*\""
          "secret.*=.*\".*\""
          "token.*=.*\".*\""
          "private.*key.*=.*\".*\""
        )
        
        for pattern in "${swift_patterns[@]}"; do
          if find . -name "*.swift" -type f -exec grep -l -i -E "$pattern" {} \; 2>/dev/null | grep -v ".build" | head -5; then
            echo "⚠️  Warning: Potential secret found in Swift files matching pattern: $pattern"
            found_secrets=$((found_secrets + 1))
          fi
        done
        
        # Check for private key files
        echo ""
        echo "Checking for private key files..."
        if find . -type f \( -name "*.pem" -o -name "*.key" -o -name "*.p12" \) -not -path "./.git/*" 2>/dev/null | head -5; then
          echo "⚠️  Warning: Found private key files"
          found_secrets=$((found_secrets + 1))
        fi
        
        # Check for .env files
        echo ""
        echo "Checking for .env files..."
        if find . -name ".env*" -type f -not -path "./.git/*" 2>/dev/null | head -5; then
          echo "⚠️  Warning: Found .env files that might contain secrets"
          found_secrets=$((found_secrets + 1))
        fi
        
        if [ $found_secrets -gt 0 ]; then
          echo ""
          echo "❌ Found $found_secrets potential security issues. Please review."
          echo ""
          echo "Note: GitHub Actions using secrets (like '\${{ secrets.VARIABLE }}') are safe and excluded from this check."
          exit 1
        else
          echo ""
          echo "✅ No obvious secrets found in source code."
          echo "✅ GitHub Actions secrets usage is properly formatted."
        fi
        
    - name: Check file permissions
      run: |
        echo "🔍 Checking for overly permissive files..."
        
        # Find files with overly permissive permissions
        permissive_files=$(find . -type f -perm /go+w -not -path "./.git/*" 2>/dev/null | head -20)
        
        if [ -n "$permissive_files" ]; then
          echo "⚠️  Warning: Found files with overly permissive permissions:"
          echo "$permissive_files"
        else
          echo "✅ No overly permissive files found."
        fi
        
    - name: Security headers check
      run: |
        echo "🔍 Checking for security-related TODOs..."
        
        security_todos=$(grep -r "TODO.*security\|FIXME.*security\|XXX.*security\|HACK.*security" . --exclude-dir=.git 2>/dev/null || true)
        
        if [ -n "$security_todos" ]; then
          echo "📝 Found security-related TODOs:"
          echo "$security_todos"
        else
          echo "✅ No security TODOs found."
        fi
        
    - name: Check for hardcoded IPs and URLs
      run: |
        echo "🔍 Checking for hardcoded IPs and suspicious URLs..."
        
        # Check for hardcoded IPs (excluding common safe ones)
        ips=$(grep -r -E "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b" . --exclude-dir={.git,docs} --exclude="*.md" 2>/dev/null | grep -v -E "(127\.0\.0\.1|0\.0\.0\.0|255\.255\.255\.255|localhost)" | head -10 || true)
        
        if [ -n "$ips" ]; then
          echo "⚠️  Found hardcoded IP addresses:"
          echo "$ips"
        fi
        
        # Check for suspicious URLs
        urls=$(grep -r -E "https?://[^/]+" . --exclude-dir={.git,docs} --exclude="*.md" 2>/dev/null | grep -v -E "(github\.com|apple\.com|localhost|example\.com)" | head -10 || true)
        
        if [ -n "$urls" ]; then
          echo "🔗 Found external URLs (review for security):"
          echo "$urls"
        fi
        
    - name: Summary
      run: |
        echo "## 🔒 Basic Security Scan Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "This basic scan checks for:" >> $GITHUB_STEP_SUMMARY
        echo "- Potential secrets in code" >> $GITHUB_STEP_SUMMARY
        echo "- Overly permissive file permissions" >> $GITHUB_STEP_SUMMARY
        echo "- Security-related TODOs" >> $GITHUB_STEP_SUMMARY
        echo "- Hardcoded IPs and URLs" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "For more comprehensive scanning, consider setting up Semgrep with an app token." >> $GITHUB_STEP_SUMMARY