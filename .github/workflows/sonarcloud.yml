name: SonarCloud Analysis

on:
  push:
    branches: [main, develop]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full clone for better analysis
    
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: "5.9"
    
    - name: Cache SPM dependencies
      uses: actions/cache@v4
      with:
        path: |
          .build
          ~/.swiftpm
        key: ${{ runner.os }}-spm-${{ hashFiles('Package.swift', '**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    
    - name: Build and Test with Coverage
      env:
        CI: true
      run: |
        swift build
        swift test --enable-code-coverage
    
    - name: Generate Coverage Report
      run: |
        # Find coverage files
        echo "Searching for coverage data..."
        PROF_DATA=$(find .build -name 'default.profdata' -type f | head -1)
        EXECUTABLE=$(find .build -name 'MagSafeGuardPackageTests.xctest' -type d | head -1)/Contents/MacOS/MagSafeGuardPackageTests
        
        echo "Profile data: $PROF_DATA"
        echo "Executable: $EXECUTABLE"
        
        if [[ -f "$PROF_DATA" && -f "$EXECUTABLE" ]]; then
          # Generate coverage report including test files to get full coverage
          xcrun llvm-cov export \
            "$EXECUTABLE" \
            -instr-profile="$PROF_DATA" \
            -format="lcov" > coverage.lcov
          
          echo "Generated coverage report: $(wc -l < coverage.lcov) lines"
          
          # Debug: Show first few lines of coverage
          echo "Coverage report preview:"
          head -20 coverage.lcov
          
          # Check if coverage has source files
          echo "Source files in coverage:"
          grep "^SF:" coverage.lcov | head -10
        else
          echo "ERROR: Could not find profdata or executable"
          echo "Build directory contents:"
          find .build -type f -name "*.profdata" -o -name "*.xctest" | head -20
        fi
    
    - name: Install SonarScanner
      run: |
        brew install sonar-scanner
    
    - name: SonarCloud Scan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        # Note: Automatic Analysis must be disabled in SonarCloud UI
        # Go to: https://sonarcloud.io/project/administration/analysis_method?id=lekman_magsafe-buskill
        # Select "With a CI-based analysis" instead of "Automatic Analysis"
        
        # Check if coverage file exists
        if [ -f "coverage.lcov" ]; then
          echo "Coverage file found: $(wc -l < coverage.lcov) lines"
        else
          echo "WARNING: No coverage.lcov file found"
        fi
        
        # Debug: Show what's in the coverage file
        echo "Coverage file contains:"
        grep -E "^SF:|^DA:" coverage.lcov | head -20
        
        # Run sonar-scanner with simplified configuration
        sonar-scanner