name: "Setup Swift Build Environment"
description: "Sets up Swift toolchain, Xcode, and caching for efficient builds"

inputs:
  swift-version:
    description: "Swift version to use"
    required: false
    default: "5.9"
  xcode-version:
    description: "Xcode version to use"
    required: false
    default: "latest-stable"
  cache-key-suffix:
    description: "Additional suffix for cache key"
    required: false
    default: "v1"

outputs:
  cache-hit:
    description: "Whether cache was hit"
    value: ${{ steps.cache.outputs.cache-hit }}

runs:
  using: "composite"
  steps:
    - name: Setup Swift
      if: runner.os == 'Linux'
      uses: swift-actions/setup-swift@3748edaead97501df15295c9e6263bbfe72c427a # 1c8768daf6498a797dd4cabf37c3a3628406b779
      with:
        swift-version: ${{ inputs.swift-version }}

    - name: Set up Xcode
      if: runner.os == 'macOS'
      uses: maxim-lobanov/setup-xcode@7f352e61cbe8130c957c3bc898c4fb025784ea1e # c51a66b42363123fa82a6cfe02c60af4281dab93
      with:
        xcode-version: ${{ inputs.xcode-version }}

    - name: Create cache directories
      shell: bash
      run: |
        # Create directories that will be cached to avoid warnings
        mkdir -p DerivedData
        mkdir -p build
    
    - name: Cache Xcode dependencies
      id: cache
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
      with:
        path: |
          DerivedData
          build
          ~/Library/Developer/Xcode/DerivedData/MagSafeGuard-*
        key: ${{ runner.os }}-xcode-${{ hashFiles('MagSafeGuard.xcodeproj/project.pbxproj', '**/*.swift') }}-${{ inputs.cache-key-suffix }}
        restore-keys: |
          ${{ runner.os }}-xcode-${{ hashFiles('MagSafeGuard.xcodeproj/project.pbxproj', '**/*.swift') }}-
          ${{ runner.os }}-xcode-

    - name: Cache and Install Taskfile
      uses: ./.github/actions/taskfile
      with:
        cache-key-suffix: ${{ inputs.cache-key-suffix }}

    - name: Validate Swift environment
      shell: bash
      run: |
        echo "Swift version: $(swift --version 2>&1 || echo 'Swift unavailable')"
        echo "Platform: $(uname -a)"
        if [ "$RUNNER_OS" == "macOS" ]; then
          echo "Xcode version: $(xcodebuild -version 2>/dev/null | head -1 || echo 'Xcode unavailable')"
          echo "Xcode path: $(xcode-select -p 2>/dev/null || echo 'Xcode path unavailable')"
        fi
        
        # Debug: Show what will be cached
        echo ""
        echo "Cache directories status:"
        echo "- DerivedData: $(du -sh DerivedData 2>/dev/null || echo 'empty/not created yet')"
        echo "- build: $(du -sh build 2>/dev/null || echo 'empty/not created yet')"
    
    - name: Generate environment summary
      if: always()
      shell: bash
      env:
        RUNNER_OS: ${{ runner.os }}
        RUNNER_ARCH: ${{ runner.arch }}
        CACHE_KEY_SUFFIX: ${{ inputs.cache-key-suffix }}
        CACHE_HIT: ${{ steps.cache.outputs.cache-hit }}
        HASH_FILES: ${{ hashFiles('MagSafeGuard.xcodeproj/project.pbxproj', '**/*.swift') }}
      run: |
        # Capture environment info
        SWIFT_VERSION=$(swift --version 2>/dev/null | head -1 || echo "Swift version unavailable")
        PLATFORM="${RUNNER_OS}-${RUNNER_ARCH}"
        CACHE_KEY="${RUNNER_OS}-xcode-${HASH_FILES}-${CACHE_KEY_SUFFIX}"
        CACHE_HIT="${CACHE_HIT}"
        
        if [ "${RUNNER_OS}" == "macOS" ]; then
          # Avoid broken pipe error by redirecting to file first
          XCODE_VERSION=$(xcodebuild -version 2>&1 | head -1 || echo "Xcode version unavailable")
          XCODE_PATH=$(xcode-select -p 2>/dev/null || echo "/Applications/Xcode.app/Contents/Developer")
        else
          XCODE_VERSION="N/A (Linux)"
          XCODE_PATH="N/A"
        fi
        
        # Generate summary
        cat >> $GITHUB_STEP_SUMMARY << EOF
        ## 🛠️ Swift Environment Setup
        
        | Property | Value |
        |----------|-------|
        | **Platform** | $PLATFORM |
        | **Swift Version** | $SWIFT_VERSION |
        | **Xcode Version** | $XCODE_VERSION |
        | **Xcode Path** | \`$XCODE_PATH\` |
        
        ## 📦 Cache Information
        
        | Property | Value |
        |----------|-------|
        | **Cache Hit** | ${CACHE_HIT:-false} |
        | **Cache Key** | \`$CACHE_KEY\` |
        | **Cache Paths** | \`DerivedData\`, \`build\`, \`~/Library/Developer/Xcode/DerivedData/MagSafeGuard-*\` |
        
        ## 📊 Cache Statistics
        
        | Directory | Size |
        |-----------|------|
        | **DerivedData** | $(du -sh DerivedData 2>/dev/null | cut -f1 || echo "0") |
        | **build** | $(du -sh build 2>/dev/null | cut -f1 || echo "0") |
        
        ### Cache Key Components
        - **OS**: ${RUNNER_OS}
        - **Project Hash**: \`$(echo "${HASH_FILES}" | cut -d- -f2 | cut -c1-8)\`
        - **Swift Files Hash**: \`$(echo "${HASH_FILES}" | cut -d- -f3 | cut -c1-8)\`
        - **Suffix**: ${CACHE_KEY_SUFFIX}
        
        EOF
        
        # Add performance tip if cache miss
        if [ "$CACHE_HIT" != "true" ]; then
          cat >> $GITHUB_STEP_SUMMARY << EOF
        
        > **💡 Performance Tip**: This was a cache miss. The next build with the same configuration will be faster due to cached dependencies.
        EOF
        fi
